# Proguard rules specific to the core module.

# Constructors accessed via reflection in DefaultRenderersFactory
-dontnote com.google.android.exoplayer2VRT.ext.vp9.LibvpxVideoRenderer
-keepclassmembers class com.google.android.exoplayer2VRT.ext.vp9.LibvpxVideoRenderer {
  <init>(long, android.os.Handler, com.google.android.exoplayer2VRT.video.VideoRendererEventListener, int);
}
-dontnote com.google.android.exoplayer2VRT.ext.opus.LibopusAudioRenderer
-keepclassmembers class com.google.android.exoplayer2VRT.ext.opus.LibopusAudioRenderer {
  <init>(android.os.Handler, com.google.android.exoplayer2VRT.audio.AudioRendererEventListener, com.google.android.exoplayer2VRT.audio.AudioProcessor[]);
}
-dontnote com.google.android.exoplayer2VRT.ext.flac.LibflacAudioRenderer
-keepclassmembers class com.google.android.exoplayer2VRT.ext.flac.LibflacAudioRenderer {
  <init>(android.os.Handler, com.google.android.exoplayer2VRT.audio.AudioRendererEventListener, com.google.android.exoplayer2VRT.audio.AudioProcessor[]);
}
-dontnote com.google.android.exoplayer2VRT.ext.ffmpeg.FfmpegAudioRenderer
-keepclassmembers class com.google.android.exoplayer2VRT.ext.ffmpeg.FfmpegAudioRenderer {
  <init>(android.os.Handler, com.google.android.exoplayer2VRT.audio.AudioRendererEventListener, com.google.android.exoplayer2VRT.audio.AudioProcessor[]);
}

# Constructors accessed via reflection in DefaultExtractorsFactory
-dontnote com.google.android.exoplayer2VRT.ext.flac.FlacExtractor
-keepclassmembers class com.google.android.exoplayer2VRT.ext.flac.FlacExtractor {
  <init>();
}

# Constructors accessed via reflection in DefaultDataSource
-dontnote com.google.android.exoplayer2VRT.ext.rtmp.RtmpDataSource
-keepclassmembers class com.google.android.exoplayer2VRT.ext.rtmp.RtmpDataSource {
  <init>();
}

# Constructors accessed via reflection in DefaultDownloaderFactory
-dontnote com.google.android.exoplayer2VRT.source.dash.offline.DashDownloader
-keepclassmembers class com.google.android.exoplayer2VRT.source.dash.offline.DashDownloader {
  <init>(android.net.Uri, java.util.List, com.google.android.exoplayer2VRT.offline.DownloaderConstructorHelper);
}
-dontnote com.google.android.exoplayer2VRT.source.hls.offline.HlsDownloader
-keepclassmembers class com.google.android.exoplayer2VRT.source.hls.offline.HlsDownloader {
  <init>(android.net.Uri, java.util.List, com.google.android.exoplayer2VRT.offline.DownloaderConstructorHelper);
}
-dontnote com.google.android.exoplayer2VRT.source.smoothstreaming.offline.SsDownloader
-keepclassmembers class com.google.android.exoplayer2VRT.source.smoothstreaming.offline.SsDownloader {
  <init>(android.net.Uri, java.util.List, com.google.android.exoplayer2VRT.offline.DownloaderConstructorHelper);
}

# Constructors accessed via reflection in DownloadHelper
-dontnote com.google.android.exoplayer2VRT.source.dash.DashMediaSource$Factory
-keepclasseswithmembers class com.google.android.exoplayer2VRT.source.dash.DashMediaSource$Factory {
  <init>(com.google.android.exoplayer2VRT.upstream.DataSource$Factory);
  ** setStreamKeys(java.util.List);
  com.google.android.exoplayer2VRT.source.dash.DashMediaSource createMediaSource(android.net.Uri);
}
-dontnote com.google.android.exoplayer2VRT.source.hls.HlsMediaSource$Factory
-keepclasseswithmembers class com.google.android.exoplayer2VRT.source.hls.HlsMediaSource$Factory {
  <init>(com.google.android.exoplayer2VRT.upstream.DataSource$Factory);
  ** setStreamKeys(java.util.List);
  com.google.android.exoplayer2VRT.source.hls.HlsMediaSource createMediaSource(android.net.Uri);
}
-dontnote com.google.android.exoplayer2VRT.source.smoothstreaming.SsMediaSource$Factory
-keepclasseswithmembers class com.google.android.exoplayer2VRT.source.smoothstreaming.SsMediaSource$Factory {
  <init>(com.google.android.exoplayer2VRT.upstream.DataSource$Factory);
  ** setStreamKeys(java.util.List);
  com.google.android.exoplayer2VRT.source.smoothstreaming.SsMediaSource createMediaSource(android.net.Uri);
}

# Don't warn about checkerframework
-dontwarn org.checkerframework.**
